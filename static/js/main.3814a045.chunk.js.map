{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","Element","select","name","switchSelect","useState","check","setCheck","useEffect","className","type","onClick","App","setSelect","map","el","ReactDOM","render","document","getElementById"],"mappings":"qNAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,EAA2B,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChD,EAA0BC,mBAAkBH,IAAWC,GAAvD,mBAAOG,EAAP,KAAcC,EAAd,KAMA,OAJAC,qBAAU,WACRD,EAASL,IAAWC,KACnB,CAACD,IAGF,qBACE,UAAQ,OACRO,UAAWH,EAAQ,+BAAiC,GAFtD,UAIE,6BACE,wBACE,UAASA,EAAQ,eAAiB,YAClCI,KAAK,SACLD,UAAWH,EAAQ,iBAAmB,SACtCK,QAAS,WACPP,EAAcE,EAAe,GAAPH,IAL1B,SAQGG,EAAQ,IAAM,QAInB,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGN,QAMIS,EAAgB,WAC3B,MAA4BP,mBAAiB,OAA7C,mBAAOH,EAAP,KAAeW,EAAf,KAEA,OACE,uBAAMJ,UAAU,oBAAhB,WACIP,GAAU,oBAAIO,UAAU,QAAd,+BAEXP,GACC,qBAAIO,UAAU,sCAAd,oBACMP,EADN,gBAIE,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAME,EAAU,UAK/B,uBAAOJ,UAAU,QAAjB,SACE,gCACGT,EACEc,KAAI,SAACC,GAAD,OACH,cAAC,EAAD,CACEb,OAAQA,EACRC,KAAMY,EACNX,aAAcS,GACTE,cCjFrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3814a045.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {\n  select: string,\n  name: string,\n  switchSelect: (name: string) => void\n};\n\nconst Element: React.FC<Props> = ({ select, name, switchSelect }) => {\n  const [check, setCheck] = useState<boolean>(select === name);\n\n  useEffect(() => {\n    setCheck(select === name);\n  }, [select]);\n\n  return (\n    <tr\n      data-cy=\"Good\"\n      className={check ? 'has-background-success-light' : ''}\n    >\n      <td>\n        <button\n          data-cy={check ? 'RemoveButton' : 'AddButton'}\n          type=\"button\"\n          className={check ? 'button is-info' : 'button'}\n          onClick={() => {\n            switchSelect(!check ? name : '');\n          }}\n        >\n          {check ? '-' : '+' }\n        </button>\n      </td>\n\n      <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n        {name}\n      </td>\n    </tr>\n  );\n};\n\nexport const App: React.FC = () => {\n  const [select, setSelect] = useState<string>('Jam');\n\n  return (\n    <main className=\"section container\">\n      {!select && <h1 className=\"title\">No goods selected</h1>}\n\n      {select && (\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${select} is selected`}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={() => setSelect('')}\n          />\n        </h1>\n      )}\n\n      <table className=\"table\">\n        <tbody>\n          {goods\n            .map((el: string) => (\n              <Element\n                select={select}\n                name={el}\n                switchSelect={setSelect}\n                key={el}\n              />\n            ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}